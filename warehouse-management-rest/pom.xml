<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>warehouse-management</artifactId>
        <groupId>com.epam.courses.warehouse</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>rest</artifactId>
    <packaging>war</packaging>

    <dependencies>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-model</artifactId>
        </dependency>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-dao-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-dao</artifactId>
        </dependency>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-service-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-service</artifactId>
        </dependency>
        <dependency>
            <groupId>com.epam.courses.warehouse</groupId>
            <artifactId>warehouse-management-test-db</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!--tests-->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>

        <finalName>rest-warehouse-management</finalName>

        <plugins>
            <!-- Embedded Jetty HTTP Server for testing web application -->
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <configuration>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                    <httpConnector>
                        <port>8088</port>
                    </httpConnector>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>